---
import '@common/globals.css';
import Analytics from '@components/Analytics.astro';
import Header from '@components/Header.astro';
import ThemeSwitch from '@components/ThemeSwitch.astro';
import config from '@config/index';
import { checkImageUrl } from '@utils/all';
import '@fontsource/monoton';
import '@fontsource/bree-serif';

import { SEO } from 'astro-seo';
const PUBLIC_GOOGLE_ANALYTICS_ID = import.meta.env.PUBLIC_GOOGLE_ANALYTICS_ID;
interface Props {
  title?: string;
  desc?: string;
  image?: string;
}
const { title: DEFAULT_TITLE, description, logo, ico } = config;
const { title, desc = description, image = logo } = Astro.props;
const resolvedOGImage = checkImageUrl(image, Astro.site);
const makeTitle = title ? title + ' | ' + DEFAULT_TITLE : description;
const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
  }
</script>

<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href={ico} />
    <link rel='sitemap' href='/sitemap-index.xml' />
    <link rel='alternate' type='application/rss+xml' title={makeTitle} href={'/rss.xml'} />
    <meta name='generator' content={Astro.generator} />
    <SEO
      title={makeTitle}
      description={desc.slice(0, 160)}
      canonical={canonicalURL}
      openGraph={{
        basic: {
          url: canonicalURL,
          type: 'website',
          title: makeTitle,
          image: resolvedOGImage
        },
        image: {
          alt: makeTitle
        },
        optional: {
          description: desc.slice(0, 160)
        }
      }}
      ,
      extend={{
        meta: [
          {
            name: 'keywords',
            content: desc.slice(0, 100) || 'LaughingZhu Blog, blog, DevNow, 前端博客, 技术, 开源'
          }
        ]
      }}
    />
    <ThemeSwitch />
  </head>

  <body class='scrollbar'>
    <Header />
    <slot />
    <style is:global>
      /* Improve Page speed */
      /* https://css-tricks.com/almanac/properties/c/content-visibility/ */
      img {
        content-visibility: auto;
      }
    </style>
    <!-- Google tag (gtag.js) -->
    <Analytics id={PUBLIC_GOOGLE_ANALYTICS_ID} />
    <script src='https://platform.twitter.com/widgets.js'></script>
  </body>
</html>
