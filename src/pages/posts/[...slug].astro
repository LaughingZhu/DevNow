---
import { latestPosts } from '@/utils/content';
import { formatHeading } from '@/utils/utils';
import Comment from '@components/Comment.astro';
import TableOfContents from '@components/TableOfContents.astro';
import SButton from '@components/mdx/MDButton.astro';
import MImage from '@components/mdx/MImage.astro';
import MLink from '@components/mdx/MLink.astro';
import BlogPost from '@layouts/BlogPost.astro';
import { render, type CollectionEntry } from 'astro:content';
import clsx from 'clsx';
type Props = { doc: CollectionEntry<'doc'> };

// 在 server 模式中选择加入预渲染
export const prerender = true;

export async function getStaticPaths() {
  return latestPosts.map((post) => ({
    params: { slug: post.id },
    props: { doc: post }
  }));
}

const { doc: post } = Astro.props;
const { Content, remarkPluginFrontmatter, headings } = await render(post);
const formatHeadings = formatHeading(headings);
const hasHeadering = formatHeadings && !!formatHeadings.length;
---

<BlogPost data={post.data} headings={formatHeadings} readTime={remarkPluginFrontmatter.minutesRead}>
  <div class='flex mt-8 w-full'>
    <!-- aside -->
    {
      hasHeadering && (
        <aside
          class='md:flex sticky top-[76px] flex-col overflow-hidden w-[20%] hidden mr-10 flex-none'
          style={{ height: 'calc(100vh - 76px)' }}
        >
          <div class='self-start flex-auto border-emerald-100 overflow-hidden hidden md:block transition-all duration-200 w-full'>
            {<TableOfContents headings={formatHeadings} />}
          </div>
        </aside>
      )
    }

    <div class={clsx('flex-auto overflow-hidden')}>
      <div class='max-w-screen-2xl'>
        <div class='my-3 prose-base dark:prose-invert prose-a:text-blue-600'>
          <div class='prose prose-lg md:prose-xl dark:prose-invert mb-12 min-w-full'>
            <Content components={{ a: MLink, SButton, img: MImage }} />
          </div>
          <Comment />
        </div>
      </div>
    </div>
  </div>
</BlogPost>
