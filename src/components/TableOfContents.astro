---
import TableOfContentsHeading from '@components/TabletOfContentsHeading.astro';

const { headings } = Astro.props;

type TableOfContent = {
  depth: number;
  text: string;
  slug: string;
  subheadings: TableOfContent[];
};

const toc = buildToc(headings);
function buildToc(headings: TableOfContent[]) {
  let toc: TableOfContent[] = [];
  let parentHeadings = new Map();
  headings.forEach((h) => {
    let heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 1 || heading.depth === 2) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });
  return toc;
}
---

<nav class='max-w-xs dark:text-black flex-col ju flex h-full overflow-hidden'>
  <h1 class='font-bold flex-none mb-3 text-2xl dark:text-white'>目录</h1>
  <ul
    class='[text-wrap:balance] h-auto flex flex-col pb-8 justify-start gap-1 overflow-x-hidden overflow-y-auto scrollbar'
  >
    {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
  </ul>
</nav>
